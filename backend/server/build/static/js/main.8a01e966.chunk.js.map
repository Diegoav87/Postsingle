{"version":3,"sources":["actions/types.js","actions/messages.js","actions/auth.js","components/Navbar/Navbar.js","components/PostList/Post/Post.js","actions/posts.js","components/PostList/PostList.js","components/Alerts/Alerts.js","components/Home.js","components/signup/Signup.js","components/Login/Login.js","components/AddPost/AddPost.js","components/Dashboard/UserPosts/UserPosts.js","components/Dashboard/Dashboard.js","components/common/PrivateRoutes.js","reducers/errors.js","reducers/posts.js","reducers/messages.js","reducers/auth.js","reducers/index.js","Store.js","components/CommentList/Comment/Comment.js","components/CommentList/CommentList.js","components/PostPage/PostPage.js","components/EditPost/EditPost.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","GET_POSTS","ADD_POST","GET_MESSAGES","CREATE_MESSAGE","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","UPDATE_POST","DELETE_POST","USER_POSTS","GET_POST","createMessage","msg","type","payload","returnErrors","status","tokenConfig","getState","token","auth","config","headers","connect","state","dispatch","logout","axios","post","then","res","data","catch","err","response","props","isAuthenticated","userNav","user","Navbar","style","backgroundColor","variant","to","Brand","href","Nav","className","Link","onClick","guestNav","username","Card","Body","id","Title","title","Text","description","Footer","dateFormat","created","postUser","color","getPost","get","errors","posts","getPosts","useEffect","postList","map","body","created_at","error","message","messages","alert","useAlert","didMountRef","useRef","current","join","password","non_field_errors","postAdded","success","postUpdated","postDeleted","Home","Container","register","email","password2","JSON","stringify","useState","setUsername","setEmail","setPassword","setPassword2","textAlign","Form","Group","controlId","Label","Control","name","placeholder","value","onChange","e","target","FormControl","Feedback","Button","login","loginUser","addPost","setTitle","setDescription","setBody","editor","ClassicEditor","toolbar","event","getData","preventDefault","userPosts","getUserPosts","Dashboard","Component","component","rest","render","loading","initialState","postDetail","intitalState","localStorage","getItem","combineReducers","action","filter","parseInt","newPosts","newUserPosts","setItem","removeItem","middleware","thunk","Store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Comment","text","comments","setComments","commentText","setCommentText","fetch","json","commentList","comment","method","console","log","useParams","undefined","createdAt","setCreatedAt","setPostUser","Spinner","animation","parse","updatePost","deletePost","delete","history","useHistory","show","setShow","handleClose","push","Modal","onHide","Header","closeButton","alertOptions","timeout","App","store","template","AlertTemplate","exact","path","EditPost","Signup","Login","PostPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"4bAAaA,EAAa,aACbC,EAAY,YACZC,EAAW,WACXC,EAAe,eACfC,EAAiB,iBACjBC,EAAe,eACfC,EAAc,cACdC,EAAa,aACbC,EAAgB,gBAChBC,EAAe,eACfC,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAc,cACdC,EAAc,cACdC,EAAa,YACbC,EAAW,WCbXC,EAAgB,SAACC,GAC5B,MAAO,CACLC,KAAMf,EACNgB,QAASF,IAIAG,EAAe,SAACH,EAAKI,GAChC,MAAO,CACLH,KAAMnB,EACNoB,QAAS,CAAEF,MAAKI,YCiGPC,EAAc,SAACC,GAC1B,IAAMC,EAAQD,IAAWE,KAAKD,MAExBE,EAAS,CACbC,QAAS,CACP,eAAgB,qBAOpB,OAHIH,IACFE,EAAOC,QAAP,8BAA2CH,IAEtCE,G,OC9DME,eAVS,SAACC,GAAD,MAAY,CAClCJ,KAAMI,EAAMJ,SAGa,SAACK,GAC1B,MAAO,CACLC,OAAQ,kBAAMD,GDIU,SAACA,EAAUP,GACrCS,IACGC,KACC,iDACA,KACAX,EAAYC,IAEbW,MAAK,SAACC,GACLL,EAAS,CACPZ,KAAMT,EACNU,QAASgB,EAAIC,UAGhBC,OAAM,SAACC,GACNR,EAASV,EAAakB,EAAIC,SAASH,KAAME,EAAIC,SAASlB,mBCd7CO,EApDI,SAACY,GAClB,IAD4B,EAKMA,EAAMf,KAAhCgB,EALoB,EAKpBA,gBAEFC,GAPsB,EAKHC,KAGvB,eAACC,EAAA,EAAD,CAAQC,MAAO,CAAEC,gBAAiB,WAAaC,QAAQ,OAAvD,UACE,cAAC,gBAAD,CAAeC,GAAG,IAAlB,SACE,cAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,QAAnB,0BAEF,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAAC,gBAAD,CAAeJ,GAAG,aAAlB,SACE,cAACG,EAAA,EAAIE,KAAL,CAAUH,KAAK,QAAf,yBAEF,cAACC,EAAA,EAAIE,KAAL,CAAUC,QAfG,WACjBd,EAAMT,UAc6BmB,KAAK,UAApC,2BAOAK,EACJ,eAACX,EAAA,EAAD,CAAQC,MAAO,CAAEC,gBAAiB,WAAaC,QAAQ,OAAvD,UACE,cAAC,gBAAD,CAAeC,GAAG,IAAlB,SACE,cAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,QAAnB,0BAEF,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAAC,gBAAD,CAAeJ,GAAG,SAAlB,SACE,cAACG,EAAA,EAAIE,KAAL,CAAUH,KAAK,YAAf,sBAEF,cAAC,gBAAD,CAAeF,GAAG,UAAlB,SACE,cAACG,EAAA,EAAIE,KAAL,CAAUH,KAAK,WAAf,6BAMR,OAAO,8BAAMT,EAAkBC,EAAUa,O,mCCL5B3B,G,OAAAA,aAVS,SAACC,GACvB,OAAIA,EAAMJ,KAAKgB,gBACN,CACLE,KAAMd,EAAMJ,KAAKkB,KAAKa,UAGjB,KAII5B,EAnCF,SAACY,GACZ,OACE,eAACiB,EAAA,EAAD,CAAML,UAAU,aAAhB,UACE,eAACK,EAAA,EAAKC,KAAN,WACE,cAAC,OAAD,CAAMV,GAAE,gBAAWR,EAAMmB,IAAzB,SACE,cAACF,EAAA,EAAKG,MAAN,CAAYD,GAAG,aAAf,SAA6BnB,EAAMqB,UAErC,cAACJ,EAAA,EAAKK,KAAN,CAAWV,UAAU,iBAArB,SAAuCZ,EAAMuB,iBAE/C,cAACN,EAAA,EAAKO,OAAN,UACE,sBAAKZ,UAAU,iCAAf,UACE,uBAAOA,UAAU,aAAjB,SACGa,IAAWzB,EAAM0B,QAAS,mBAE5B1B,EAAM2B,WAAa3B,EAAMG,KACxB,cAAC,OAAD,CAAMK,GAAE,gBAAWR,EAAMmB,IAAzB,SACE,mBAAGP,UAAU,cAAcP,MAAO,CAAEuB,MAAO,YAE3C,iBCSDC,EAAU,SAACV,GAAD,OAAQ,SAAC7B,GAC9BE,IACGsC,IADH,+CAC+CX,EAD/C,MAEGzB,MAAK,SAACC,GACLL,EAAS,CACPZ,KAAMH,EACNI,QAASgB,EAAIC,UAGhBC,OAAM,SAACC,GACN,IAAMiC,EAAS,CACbtD,IAAKqB,EAAIC,SAASH,KAClBf,OAAQiB,EAAIC,SAASlB,QAEvBS,EAAS,CACPZ,KAAMnB,EACNoB,QAASoD,SCVF3C,eANS,SAACC,GACvB,MAAO,CACL2C,MAAO3C,EAAM2C,MAAMA,UARI,SAAC1C,GAC1B,MAAO,CACL2C,SAAU,kBAAM3C,GDjBU,SAACA,GAC7BE,IACGsC,IAAI,gCACJpC,MAAK,SAACC,GACLL,EAAS,CACPZ,KAAMlB,EACNmB,QAASgB,EAAIC,UAGhBC,OAAM,SAACC,GACN,IAAMiC,EAAS,CACbtD,IAAKqB,EAAIC,SAASH,KAClBf,OAAQiB,EAAIC,SAASlB,QAEvBS,EAAS,CACPZ,KAAMnB,EACNoB,QAASoD,cCWF3C,EAlCE,SAACY,GAChBkC,qBAAU,WACRlC,EAAMiC,aACL,IAEH,IAAME,EAAWnC,EAAMgC,MAAMI,KAAI,SAAC3C,GAChC,OACE,cAAC,EAAD,CACE4B,MAAO5B,EAAK4B,MACZgB,KAAM5C,EAAK4C,KACXX,QAASjC,EAAK6C,WAEdX,SAAUlC,EAAKU,KACfgB,GAAI1B,EAAK0B,GACTI,YAAa9B,EAAK8B,aAHb9B,EAAK0B,OAQhB,OAAO,qBAAKP,UAAU,YAAf,SAA4BuB,O,QCoBtB/C,eAVS,SAACC,GAAD,MAAY,CAClCkD,MAAOlD,EAAM0C,OACbS,QAASnD,EAAMoD,YAQFrD,EAxCA,SAACY,GACd,IAAM0C,EAAQC,cACRC,EAAcC,kBAAO,GAyB3B,OAvBAX,qBAAU,WACR,GAAIU,EAAYE,QAAS,CACvB,IAAMP,EAAQvC,EAAMuC,MACdC,EAAUxC,EAAMwC,QAClBD,IACEA,EAAM9D,IAAI0B,MAAMuC,EAAMH,MAAMA,EAAM9D,IAAI0B,MACtCoC,EAAM9D,IAAIuC,UACZ0B,EAAMH,MAAN,oBAAyBA,EAAM9D,IAAIuC,SAAS+B,SAC1CR,EAAM9D,IAAIuE,UACZN,EAAMH,MAAN,oBAAyBA,EAAM9D,IAAIuE,SAASD,SAC1CR,EAAM9D,IAAIwE,kBACZP,EAAMH,MAAMA,EAAM9D,IAAIwE,iBAAiBF,SAEvCP,IACEA,EAAQU,WAAWR,EAAMS,QAAQX,EAAQU,WACzCV,EAAQY,aAAaV,EAAMS,QAAQX,EAAQY,aAC3CZ,EAAQa,aAAaX,EAAMS,QAAQX,EAAQa,mBAGjDT,EAAYE,SAAU,KAInB,2BCZMQ,EAZF,WACX,OACE,gCACE,cAAC,EAAD,IACA,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,W,iCC+GOnE,G,OAAAA,aAbS,SAACC,GACvB,MAAO,CACLY,gBAAiBZ,EAAMJ,KAAKgB,oBAIL,SAACX,GAC1B,MAAO,CACLkE,SAAU,SAACxC,EAAUyC,EAAOT,EAAUU,GAA5B,OACRpE,EP3CkB,SAAC0B,EAAUyC,EAAOT,EAAUU,GAA5B,OAA0C,SAChEpE,GAEA,IAMM+C,EAAOsB,KAAKC,UAAU,CAC1B5C,WACAyC,QACAT,WACAU,cAGFlE,IACGC,KAAK,mDAAoD4C,EAd7C,CACblD,QAAS,CACP,eAAgB,sBAajBO,MAAK,SAACC,GACLL,EAAS,CACPZ,KAAMR,EACNS,QAASgB,EAAIC,UAGhBC,OAAM,SAACC,GACNR,EAASV,EAAakB,EAAIC,SAASH,KAAME,EAAIC,SAASlB,SACtDS,EAAS,CACPZ,KAAMP,QOgBCqF,CAASxC,EAAUyC,EAAOT,EAAUU,QAIpCtE,EA7GA,SAACY,GAAW,IAAD,EACQ6D,mBAAS,IADjB,mBACjB7C,EADiB,KACP8C,EADO,OAEED,mBAAS,IAFX,mBAEjBJ,EAFiB,KAEVM,EAFU,OAGQF,mBAAS,IAHjB,mBAGjBb,EAHiB,KAGPgB,EAHO,OAIUH,mBAAS,IAJnB,mBAIjBH,EAJiB,KAINO,EAJM,KA0BxB,OAAIjE,EAAMC,gBACD,cAAC,IAAD,CAAUO,GAAG,eAIpB,sBAAKI,UAAU,YAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,eAAf,UACE,oBAAIP,MAAO,CAAE6D,UAAW,UAAxB,qBACA,cAAC,EAAD,IACA,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,aAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CACE7F,KAAK,OACL8F,KAAK,WACLC,YAAY,kBACZC,MAAO1D,EACP2D,SAtCa,SAACC,GACxBd,EAAYc,EAAEC,OAAOH,UAuCb,cAACI,EAAA,EAAYC,SAAb,CAAsBrG,KAAK,eAG7B,eAACyF,EAAA,EAAKC,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CACE7F,KAAK,QACL8F,KAAK,QACLC,YAAY,cACZC,MAAOjB,EACPkB,SA9CU,SAACC,GACrBb,EAASa,EAAEC,OAAOH,UA+CV,cAACI,EAAA,EAAYC,SAAb,CAAsBrG,KAAK,eAG7B,eAACyF,EAAA,EAAKC,MAAN,CAAYC,UAAU,aAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CACE7F,KAAK,WACL8F,KAAK,WACLC,YAAY,iBACZC,MAAO1B,EACP2B,SAtDa,SAACC,GACxBZ,EAAYY,EAAEC,OAAOH,UAuDb,cAACP,EAAA,EAAKI,QAAQQ,SAAd,CAAuBrG,KAAK,eAG9B,eAACyF,EAAA,EAAKC,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,+BACA,cAACH,EAAA,EAAKI,QAAN,CACE7F,KAAK,WACL8F,KAAK,YACLC,YAAY,mBACZC,MAAOhB,EACPiB,SA9Dc,SAACC,GACzBX,EAAaW,EAAEC,OAAOH,UA+Dd,cAACP,EAAA,EAAKI,QAAQQ,SAAd,CAAuBrG,KAAK,kBAGhC,cAACsG,EAAA,EAAD,CAAQpD,MAAM,UAAUd,QA/DR,WACpBd,EAAMwD,SAASxC,EAAUyC,EAAOT,EAAUU,IA8DtC,qBAGA,oBAAG9C,UAAU,OAAb,mCACwB,cAAC,OAAD,CAAMJ,GAAG,SAAT,gCCVjBpB,G,OAAAA,aAZS,SAACC,GACvB,MAAO,CACLY,gBAAiBZ,EAAMJ,KAAKgB,oBAIL,SAACX,GAC1B,MAAO,CACL2F,MAAO,SAACjE,EAAUgC,GAAX,OAAwB1D,ER3Dd,SAAC0B,EAAUgC,GAAX,OAAwB,SAAC1D,GAC5C,IAMM+C,EAAOsB,KAAKC,UAAU,CAC1B5C,WACAgC,aAGFxD,IACGC,KAAK,gDAAiD4C,EAZ1C,CACblD,QAAS,CACP,eAAgB,sBAWjBO,MAAK,SAACC,GACLL,EAAS,CACPZ,KAAMX,EACNY,QAASgB,EAAIC,UAGhBC,OAAM,SAACC,GACNR,EAASV,EAAakB,EAAIC,SAASH,KAAME,EAAIC,SAASlB,SACtDS,EAAS,CACPZ,KAAMV,QQoC8BiH,CAAMjE,EAAUgC,QAI7C5D,EA9ED,SAACY,GAAW,IAAD,EACS6D,mBAAS,IADlB,mBAChB7C,EADgB,KACN8C,EADM,OAESD,mBAAS,IAFlB,mBAEhBb,EAFgB,KAENgB,EAFM,KAgBjBkB,EAAY,SAACN,GACjB5E,EAAMiF,MAAMjE,EAAUgC,IAGxB,OAAIhD,EAAMC,gBACD,cAAC,IAAD,CAAUO,GAAG,eAIpB,sBAAKI,UAAU,UAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,cAAf,UACE,oBAAIP,MAAO,CAAE6D,UAAW,UAAxB,mBACA,cAAC,EAAD,IACA,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,aAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CACE7F,KAAK,OACL8F,KAAK,WACLC,YAAY,kBACZC,MAAO1D,EACP2D,SAlCa,SAACC,GACxBd,EAAYc,EAAEC,OAAOH,UAmCb,cAACI,EAAA,EAAYC,SAAb,CAAsBrG,KAAK,eAG7B,eAACyF,EAAA,EAAKC,MAAN,CAAYC,UAAU,aAAtB,UACE,cAACF,EAAA,EAAKG,MAAN,4BACA,cAACH,EAAA,EAAKI,QAAN,CACE7F,KAAK,WACL8F,KAAK,WACLC,YAAY,iBACZC,MAAO1B,EACP2B,SA1Ca,SAACC,GACxBZ,EAAYY,EAAEC,OAAOH,UA2Cb,cAACP,EAAA,EAAKI,QAAQQ,SAAd,CAAuBrG,KAAK,kBAGhC,cAACsG,EAAA,EAAD,CAAQpD,MAAM,UAAUlD,KAAK,SAASoC,QA3CvB,WACnBoE,KA0CI,mBAGA,oBAAGtE,UAAU,OAAb,iCACsB,cAAC,OAAD,CAAMJ,GAAG,UAAT,iC,6BCSfpB,eAAQ,MANI,SAACE,GAC1B,MAAO,CACL6F,QAAS,SAAC1F,GAAD,OAAUH,ENLA,SAACG,GAAD,OAAU,SAACH,EAAUP,GAC1CS,IACGC,KACC,2CACAA,EACAX,EAAYC,IAEbW,MAAK,SAACC,GACLL,EAASd,EAAc,CAAE0E,UAAW,gBACpC5D,EAAS,CACPZ,KAAMjB,EACNkB,QAASgB,EAAIC,UAGhBC,OAAM,SAACC,GACN,IAAMiC,EAAS,CACbtD,IAAKqB,EAAIC,SAASH,KAClBf,OAAQiB,EAAIC,SAASlB,QAEvBS,EAAS,CACPZ,KAAMnB,EACNoB,QAASoD,QMhBeoD,CAAQ1F,QAIzBL,EA9EC,SAACY,GAAW,IAAD,EACC6D,mBAAS,IADV,mBAClBxC,EADkB,KACX+D,EADW,OAEavB,mBAAS,IAFtB,mBAElBtC,EAFkB,KAEL8D,EAFK,OAGDxB,mBAAS,IAHR,mBAGlBxB,EAHkB,KAGZiD,EAHY,KA0BzB,OACE,sBAAK1E,UAAU,OAAf,UACE,0CACA,eAACuD,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CAAcI,SA3BF,SAACC,GACnBQ,EAASR,EAAEC,OAAOH,QA0ByBhG,KAAK,OAAOgG,MAAOrD,OAE1D,eAAC8C,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKG,MAAN,gCACA,cAACH,EAAA,EAAKI,QAAN,CAAcI,SAvBJ,SAACC,GACjBS,EAAeT,EAAEC,OAAOH,QAsBiBhG,KAAK,OAAOgG,MAAOnD,OAExD,eAAC4C,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKG,MAAN,mBACA,cAAC,YAAD,CACE1E,KAAMyC,EACNkD,OAAQC,KACRtG,OAAQ,CACNuG,QAAS,CACP,UACA,IACA,OACA,SACA,IACA,OACA,eACA,eACA,IACA,OACA,SAGJd,SAAU,SAACe,EAAOH,GAChB,IAAM3F,EAAO2F,EAAOI,UACpBL,EAAQ1F,SAId,cAACoF,EAAA,EAAD,CAAQlE,QA/CG,SAAC8D,GAChBA,EAAEgB,iBACF,IAAMnG,EAAO,CAAE4B,QAAOgB,OAAMd,eAC5BvB,EAAMmF,QAAQ1F,GACd2F,EAAS,IACTC,EAAe,IACfC,EAAQ,KAyCuB/E,QAAQ,UAAU7B,KAAK,SAAlD,0BClCOU,gBAVS,SAACC,GACvB,MAAO,CACLwG,UAAWxG,EAAM2C,MAAM6D,cAIA,SAACvG,GAC1B,MAAO,CAAEwG,aAAc,kBAAMxG,GPqBG,SAACA,EAAUP,GAC3CS,IACGsC,IAAI,yCAA0ChD,EAAYC,IAC1DW,MAAK,SAACC,GACLL,EAAS,CACPZ,KAAMJ,EACNK,QAASgB,EAAIC,UAGhBC,OAAM,SAACC,GACN,IAAMiC,EAAS,CACbtD,IAAKqB,EAAIC,SAASH,KAClBf,OAAQiB,EAAIC,SAASlB,QAEvBS,EAAS,CACPZ,KAAMnB,EACNoB,QAASoD,cOlCF3C,EAhCG,SAACY,GACjBkC,qBAAU,WACRlC,EAAM8F,iBACL,IAEH,IAAM3D,EAAWnC,EAAM6F,UAAUzD,KAAI,SAAC3C,GACpC,OACE,cAAC,EAAD,CACE4B,MAAO5B,EAAK4B,MACZgB,KAAM5C,EAAK4C,KACXX,QAASjC,EAAK6C,WAEdnB,GAAI1B,EAAK0B,GACTI,YAAa9B,EAAK8B,YAClBI,SAAUlC,EAAKU,MAHVV,EAAK0B,OAQhB,OAAO,qBAAKP,UAAU,iBAAf,SAAiCuB,OCF3B4D,GAfG,WAChB,OACE,gCACE,cAAC,EAAD,IACA,eAACxC,EAAA,EAAD,WACE,cAAC,EAAD,IACA,gCACE,cAAC,GAAD,IACA,cAAC,GAAD,c,SCUKnE,gBAJS,SAACC,GAAD,MAAY,CAClCJ,KAAMI,EAAMJ,QAGCG,EArBM,SAAC,GAA6C,IAAhC4G,EAA+B,EAA1CC,UAAsBhH,EAAoB,EAApBA,KAASiH,EAAW,qCAChE,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACnG,GACP,OAAIf,EAAKmH,QACA,4CACGnH,EAAKgB,gBAGR,cAAC+F,EAAD,eAAehG,IAFf,cAAC,IAAD,CAAUQ,GAAG,kB,2BCVxB6F,GAAe,CACnB5H,IAAK,GACLI,OAAQ,M,SCKJwH,GAAe,CACnBrE,MAAO,GACP6D,UAAW,GACXS,WAAY,ICVRD,GAAe,GCSfE,GAAe,CACnBvH,MAAOwH,aAAaC,QAAQ,SAC5BxG,gBAAiB,KACjBmG,SAAS,EACTjG,KAAM,MCTOuG,8BAAgB,CAC7B3E,OJAa,WAAyC,IAA/B1C,EAA8B,uDAAtBgH,GAAcM,EAAQ,uCACrD,OAAQA,EAAOjI,MACb,KAAKnB,EACH,MAAO,CACLkB,IAAKkI,EAAOhI,QAAQF,IACpBI,OAAQ8H,EAAOhI,QAAQE,QAE3B,QACE,OAAOQ,IIPX2C,MHOa,WAAyC,IAA/B3C,EAA8B,uDAAtBgH,GAAcM,EAAQ,uCACrD,OAAQA,EAAOjI,MACb,KAAKlB,EACH,OAAO,2BACF6B,GADL,IAEE2C,MAAO2E,EAAOhI,QACd2H,WAAY,KAEhB,KAAK7I,EACH,OAAO,2BACF4B,GADL,IAEE2C,MAAM,GAAD,oBAAM3C,EAAM2C,OAAZ,CAAmB2E,EAAOhI,UAC/BkH,UAAU,GAAD,oBAAMxG,EAAMwG,WAAZ,CAAuBc,EAAOhI,YAE3C,KAAKN,EACH,OAAO,2BACFgB,GADL,IAEE2C,MAAO3C,EAAM2C,MAAM4E,QACjB,SAACnH,GAAD,OAAUA,EAAK0B,KAAO0F,SAASF,EAAOhI,YAExCkH,UAAWxG,EAAMwG,UAAUe,QACzB,SAACnH,GAAD,OAAUA,EAAK0B,KAAO0F,SAASF,EAAOhI,cAG5C,KAAKP,EACH,IAAM0I,EAAWzH,EAAM2C,MAAMI,KAAI,SAAC3C,GAChC,OAAIA,EAAK0B,KAAO0F,SAASF,EAAOhI,QAAQwC,IAC/B,2BAAK1B,GAASkH,EAAOhI,SAEvBc,KAEHsH,EAAe1H,EAAMwG,UAAUzD,KAAI,SAAC3C,GACxC,OAAIA,EAAK0B,KAAO0F,SAASF,EAAOhI,QAAQwC,IAC/B,2BAAK1B,GAASkH,EAAOhI,SAEvBc,KAET,OAAO,2BACFJ,GADL,IAEE2C,MAAO8E,EACPjB,UAAWkB,IAEf,KAAKzI,EACH,OAAO,2BACFe,GADL,IAEEwG,UAAWc,EAAOhI,QAClB2H,WAAY,KAEhB,KAAK/H,EACH,OAAO,2BACFc,GADL,IAEEiH,WAAYK,EAAOhI,UAEvB,QACE,OAAOU,IG5DXoD,SFLa,WAAyC,IAA/BpD,EAA8B,uDAAtBgH,GAAcM,EAAQ,uCACrD,OAAQA,EAAOjI,MACb,KAAKhB,EAEL,KAAKC,EACH,OAAgBgJ,EAAOhI,QACzB,QACE,OAAOU,IEDXJ,KDQa,WAAyC,IAA/BI,EAA8B,uDAAtBkH,GAAcI,EAAQ,uCACrD,OAAQA,EAAOjI,MACb,KAAKd,EACH,OAAO,2BACFyB,GADL,IAEE+G,SAAS,IAEb,KAAKvI,EACH,OAAO,2BACFwB,GADL,IAEEY,iBAAiB,EACjBmG,SAAS,EACTjG,KAAMwG,EAAOhI,UAEjB,KAAKZ,EACL,KAAKG,EAEH,OADAsI,aAAaQ,QAAQ,QAASL,EAAOhI,QAAQK,OACtC,uCACFK,GACAsH,EAAOhI,SAFZ,IAGEsB,iBAAiB,EACjBmG,SAAS,IAEb,KAAKtI,EACL,KAAKE,EACL,KAAKC,EACL,KAAKE,EAEH,OADAqI,aAAaS,WAAW,SACjB,2BACF5H,GADL,IAEEL,MAAO,KACPmB,KAAM,KACNF,iBAAiB,EACjBmG,SAAS,IAGb,QACE,OAAO/G,ME/CP6H,GAAa,CAACC,MAQLC,GANDC,uBACZC,GALmB,GAOnBC,+BAAoBC,mBAAe,WAAf,EAAmBN,M,4BCS1BO,I,OAlBC,SAACzH,GACf,OACE,sBAAKY,UAAU,UAAf,UACE,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,0BACb,6BAAKZ,EAAMgB,cAEb,sBAAKJ,UAAU,OAAf,UACE,mBAAGA,UAAU,2BACb,mBAAGA,UAAU,iBAAb,SACGa,IAAWzB,EAAMsC,WAAY,sBAGlC,4BAAItC,EAAM0H,YCgFDtI,I,OAAAA,aAPS,SAACC,GACvB,MAAO,CACLL,MAAOK,EAAMJ,KAAKD,MAClBiB,gBAAiBZ,EAAMJ,KAAKgB,mBAIjBb,EA5FK,SAACY,GAAW,IAAD,EACG6D,mBAAS,IADZ,mBACtB8D,EADsB,KACZC,EADY,OAES/D,mBAAS,IAFlB,mBAEtBgE,EAFsB,KAETC,EAFS,KAQ7B5F,qBAAU,WAEN6F,MAAM,6CAAD,OAA8C/H,EAAMmB,GAApD,MACFzB,MAAK,SAACK,GACL,OAAOA,EAASiI,UAEjBtI,MAAK,SAACE,GACLgI,EAAYhI,QAIjB,IAEH,IAsBMqI,EAAcN,EAASvF,KAAI,SAAC8F,GAChC,OACE,cAAC,GAAD,CACElH,SAAUkH,EAAQ/H,KAClBuH,KAAMQ,EAAQR,KACdpF,WAAY4F,EAAQ5F,YACf4F,EAAQ/G,OAKnB,OACE,sBAAKP,UAAU,eAAf,UACE,8BACE,4CAGDZ,EAAMC,gBACL,uBAAMW,UAAU,OAAhB,UACE,0BACEA,UAAU,eACV6D,YAAY,iBACZC,MAAOmD,EACPlD,SA9DY,SAACC,GACrBkD,EAAelD,EAAEC,OAAOH,UA+DlB,wBACE5D,QAhDS,WACjB,IAAM9B,EAAQgB,EAAMhB,MAEdE,EAAS,CACb,eAAgB,oBAGdF,IACFE,EAAM,cAAN,gBAAmCF,IAGrC+I,MAAM,8CAAD,OAA+C/H,EAAMmB,GAArD,KAA4D,CAC/DgH,OAAQ,OACRhJ,QAASD,EACTmD,KAAMsB,KAAKC,UAAU,CAAE8D,KAAMG,MAE5BnI,MAAK,SAACC,GAAD,OAASA,EAAIqI,UAClBtI,MAAK,SAACE,GACLwI,QAAQC,IAAIzI,OA+BRlB,KAAK,SACLkC,UAAU,uBAHZ,oBASF,mBAAGA,UAAU,iBAAb,8CAEF,uBACCqH,SChBQ7I,I,OAAAA,aAZS,SAACC,GACvB,MAAO,CACLI,KAAMJ,EAAM2C,MAAMsE,eAIK,SAAChH,GAC1B,MAAO,CACLuC,QAAS,SAACV,GAAD,OAAQ7B,EAASuC,EAAQV,QAIvB/B,EA1DE,SAACY,GAAW,IACnBmB,EAAOmH,cAAPnH,GADkB,EAEA0C,wBAAS0E,GAFT,mBAEnBlH,EAFmB,KAEZ+D,EAFY,OAGYvB,wBAAS0E,GAHrB,mBAGnBhH,EAHmB,KAGN8D,EAHM,OAIFxB,wBAAS0E,GAJP,mBAInBlG,EAJmB,KAIbiD,EAJa,OAKQzB,wBAAS0E,GALjB,mBAKnBC,EALmB,KAKRC,EALQ,OAME5E,wBAAS0E,GANX,mBAMnBpI,EANmB,KAMbuI,EANa,KAmB1B,OAXAxG,qBAAU,WACRlC,EAAM6B,QAAQV,GACVnB,EAAMP,KAAK4B,QAAUA,IACvB+D,EAASpF,EAAMP,KAAK4B,OACpBgE,EAAerF,EAAMP,KAAK8B,aAC1B+D,EAAQtF,EAAMP,KAAK4C,MACnBoG,EAAazI,EAAMP,KAAK6C,YACxBoG,EAAY1I,EAAMP,KAAKU,SAExB,CAACH,EAAMP,KAAK4B,QAGb,gCACE,cAAC,EAAD,SACWkH,IAAVlH,EACC,qBAAKT,UAAU,WAAf,SACE,cAAC+H,GAAA,EAAD,CAASC,UAAU,SAASrI,QAAQ,cAGtC,gCACE,sBAAKK,UAAU,2BAAf,UACE,6BAAKS,IACL,oBAAIT,UAAU,aAAd,SAA4BW,IAC5B,8BACGpB,EAAM,IACP,sBAAMS,UAAU,sBAAhB,SACGa,IAAW+G,EAAW,sBAG3B,qBAAKnI,MAAO,CAAE6D,UAAW,WAAzB,SAAuC2E,aAAMxG,QAE/C,cAAC,GAAD,CAAalB,GAAIA,c,UCyGZ/B,gBAfS,SAACC,GACvB,MAAO,CACLI,KAAMJ,EAAM2C,MAAMsE,WAClBnG,KAAMd,EAAMJ,KAAKkB,KAAKa,aAIC,SAAC1B,GAC1B,MAAO,CACLwJ,WAAY,SAAC3H,EAAI1B,GAAL,OAAcH,EnB/CJ,SAAC6B,EAAI1B,GAAL,OAAc,SAACH,EAAUP,GACjDS,IACGC,KADH,kDAE+C0B,EAF/C,KAGI1B,EACAX,EAAYC,IAEbW,MAAK,SAACC,GACLL,EAASd,EAAc,CAAE4E,YAAa,kBACtC9D,EAAS,CACPZ,KAAMN,EACNO,QAASgB,EAAIC,UAGhBC,OAAM,SAACC,GACN,IAAMiC,EAAS,CACbtD,IAAKqB,EAAIC,SAASH,KAClBf,OAAQiB,EAAIC,SAASlB,QAEvBS,EAAS,CACPZ,KAAMnB,EACNoB,QAASoD,QmB0BsB+G,CAAW3H,EAAI1B,KAClDsJ,WAAY,SAAC5H,EAAIhB,GAAL,OAAcb,EnBtBJ,SAAC6B,EAAIhB,GAAL,OAAc,SAACb,EAAUP,GACjDS,IACGwJ,OADH,kDAE+C7H,EAF/C,KAGIrC,EAAYC,IAEbW,MAAK,SAACC,GACLL,EAASd,EAAc,CAAE6E,YAAa,kBACtC/D,EAAS,CACPZ,KAAML,EACNM,QAASgB,EAAIC,KACbO,KAAMA,OAGTN,OAAM,SAACC,GACN,IAAMiC,EAAS,CACbtD,IAAKqB,EAAIC,SAASH,KAClBf,OAAQiB,EAAIC,SAASlB,QAEvBS,EAAS,CACPZ,KAAMnB,EACNoB,QAASoD,QmBCsBgH,CAAW5H,EAAIhB,KAClD0B,QAAS,SAACV,GAAD,OAAQ7B,EAASuC,EAAQV,QAIvB/B,EAhJE,SAACY,GAChB,IAAMiJ,EAAUC,cACR/H,EAAOmH,cAAPnH,GAFkB,EAIA0C,wBAAS0E,GAJT,mBAInBlH,EAJmB,KAIZ+D,EAJY,OAKYvB,wBAAS0E,GALrB,mBAKnBhH,EALmB,KAKN8D,EALM,OAMFxB,wBAAS0E,GANP,mBAMnBlG,EANmB,KAMbiD,EANa,OAOFzB,oBAAS,GAPP,mBAOnBsF,EAPmB,KAObC,EAPa,KAS1BlH,qBAAU,WACRkG,QAAQC,IAAI,GACZrI,EAAM6B,QAAQV,GACVnB,EAAMP,KAAK4B,QAAUA,IACvB+D,EAASpF,EAAMP,KAAK4B,OACpBgE,EAAerF,EAAMP,KAAK8B,aAC1B+D,EAAQtF,EAAMP,KAAK4C,SAEpB,CAACrC,EAAMP,KAAK4B,QAEf,IAuBMgI,EAAc,kBAAMD,GAAQ,IAOlC,OACE,gCACE,cAAC,EAAD,SACWb,IAAVlH,EACC,qBAAKT,UAAU,WAAf,SACE,cAAC+H,GAAA,EAAD,CAASC,UAAU,SAASrI,QAAQ,cAGtC,sBAAKK,UAAU,sBAAf,UACE,2CACA,cAAC,EAAD,IACA,eAACuD,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKG,MAAN,yBACA,cAACH,EAAA,EAAKI,QAAN,CAAcI,SA5CN,SAACC,GACnBQ,EAASR,EAAEC,OAAOH,QA2C6BhG,KAAK,OAAOgG,MAAOrD,OAE1D,eAAC8C,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKG,MAAN,gCACA,cAACH,EAAA,EAAKI,QAAN,CACEI,SAzCI,SAACC,GACjBS,EAAeT,EAAEC,OAAOH,QAyCZhG,KAAK,OACLgG,MAAOnD,OAGX,eAAC4C,EAAA,EAAKC,MAAN,WACE,cAACD,EAAA,EAAKG,MAAN,mBACA,cAAC,YAAD,CACE1E,KAAMyC,EACNkD,OAAQC,KACRtG,OAAQ,CACNuG,QAAS,CACP,UACA,IACA,OACA,SACA,IACA,OACA,eACA,eACA,IACA,OACA,SAGJd,SAAU,SAACe,EAAOH,GAChB,IAAM3F,EAAO2F,EAAOI,UACpBL,EAAQ1F,SAId,cAACoF,EAAA,EAAD,CAAQlE,QApEE,SAAC8D,GACnBA,EAAEgB,iBACF,IAAMnG,EAAO,CAAE4B,QAAOgB,OAAMd,eAC5BvB,EAAM8I,WAAW3H,EAAI1B,GACrBwJ,EAAQK,KAAK,eAgEyB/I,QAAQ,UAAU7B,KAAK,SAArD,kBAGA,cAACsG,EAAA,EAAD,CAAQpE,UAAU,OAAOL,QAAQ,SAASO,QAhEhC,WAClBsI,GAAQ,IA+DA,oBAIA,eAACG,GAAA,EAAD,CAAOX,WAAW,EAAOO,KAAMA,EAAMK,OAAQH,EAA7C,UACE,cAACE,GAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,GAAA,EAAMnI,MAAP,4BAEF,cAACmI,GAAA,EAAMrI,KAAP,4EAGA,eAACqI,GAAA,EAAM/H,OAAP,WACE,cAACwD,EAAA,EAAD,CAAQzE,QAAQ,UAAUO,QAASuI,EAAnC,uBAGA,cAACrE,EAAA,EAAD,CAAQzE,QAAQ,SAASO,QA1Eb,WACxBd,EAAM+I,WAAW5H,EAAInB,EAAMG,MAC3BiJ,GAAQ,GACRH,EAAQK,KAAK,eAuED,2CC/GVK,GAAe,CACnBC,QAAS,KA4BIC,OAzBf,WAKE,OAJA3H,qBAAU,WACRkF,GAAM9H,UvBVoB,SAACA,EAAUP,GACvCO,EAAS,CAAEZ,KAAMd,IAEjB4B,IACGsC,IAAI,+CAAgDhD,EAAYC,IAChEW,MAAK,SAACC,GACLL,EAAS,CACPZ,KAAMb,EACNc,QAASgB,EAAIC,UAGhBC,OAAM,SAACC,GACNR,EAASV,EAAakB,EAAIC,SAASH,KAAME,EAAIC,SAASlB,SACtDS,EAAS,CACPZ,KAAMZ,YuBHT,IAGD,qBAAK8C,UAAU,MAAf,SACE,cAAC,IAAD,CAAUkJ,MAAO1C,GAAjB,SACE,cAAC,IAAD,yBAAe2C,SAAUC,MAAmBL,IAA5C,aACE,cAAC,gBAAD,UACE,eAAC,IAAD,WACE,cAAC,GAAD,CAAcM,OAAK,EAACC,KAAK,YAAYjE,UAAWkE,KAChD,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAUjE,UAAWmE,IACvC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASjE,UAAWoE,IACtC,cAAC,GAAD,CAAcJ,OAAK,EAACC,KAAK,aAAajE,UAAWF,KACjD,cAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,IAAIjE,UAAW3C,IACjC,cAAC,IAAD,CAAO2G,OAAK,EAACC,KAAK,YAAYjE,UAAWqE,kBCzBxCC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/K,MAAK,YAAkD,IAA/CgL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCCdO,IAAS5E,OACP,cAAC,IAAM6E,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.8a01e966.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const GET_MESSAGES = \"GET_MESSAGES\";\r\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const USER_POSTS = \"USER_POST\";\r\nexport const GET_POST = \"GET_POST\";\r\n","import { CREATE_MESSAGE, GET_ERRORS } from \"./types\";\r\n\r\n// create message\r\nexport const createMessage = (msg) => {\r\n  return {\r\n    type: CREATE_MESSAGE,\r\n    payload: msg,\r\n  };\r\n};\r\n\r\nexport const returnErrors = (msg, status) => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { msg, status },\r\n  };\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n} from \"./types\";\r\nimport { returnErrors } from \"./messages\";\r\n\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  axios\r\n    .get(\"http://127.0.0.1:8000/accounts/api/auth/user\", tokenConfig(getState))\r\n    .then((res) => {\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    });\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    username,\r\n    password,\r\n  });\r\n\r\n  axios\r\n    .post(\"http://127.0.0.1:8000/accounts/api/auth/login\", body, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: LOGIN_FAILED,\r\n      });\r\n    });\r\n};\r\n\r\nexport const logout = () => (dispatch, getState) => {\r\n  axios\r\n    .post(\r\n      \"http://127.0.0.1:8000/accounts/api/auth/logout\",\r\n      null,\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: LOGOUT_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n    });\r\n};\r\n\r\nexport const register = (username, email, password, password2) => (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({\r\n    username,\r\n    email,\r\n    password,\r\n    password2,\r\n  });\r\n\r\n  axios\r\n    .post(\"http://127.0.0.1:8000/accounts/api/auth/register\", body, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\nexport const tokenConfig = (getState) => {\r\n  const token = getState().auth.token;\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  if (token) {\r\n    config.headers[\"Authorization\"] = `Token ${token}`;\r\n  }\r\n  return config;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout } from \"../../actions/auth\";\r\n\r\nconst Navigation = (props) => {\r\n  const logoutUser = () => {\r\n    props.logout();\r\n  };\r\n\r\n  const { isAuthenticated, user } = props.auth;\r\n\r\n  const userNav = (\r\n    <Navbar style={{ backgroundColor: \"#12232E\" }} variant=\"dark\">\r\n      <LinkContainer to=\"/\">\r\n        <Navbar.Brand href=\"#home\">Postsingle</Navbar.Brand>\r\n      </LinkContainer>\r\n      <Nav className=\"mr-auto\">\r\n        <LinkContainer to=\"/dashboard\">\r\n          <Nav.Link href=\"#home\">Dashboard</Nav.Link>\r\n        </LinkContainer>\r\n        <Nav.Link onClick={logoutUser} href=\"#logout\">\r\n          Logout\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n\r\n  const guestNav = (\r\n    <Navbar style={{ backgroundColor: \"#12232E\" }} variant=\"dark\">\r\n      <LinkContainer to=\"/\">\r\n        <Navbar.Brand href=\"#home\">Postsingle</Navbar.Brand>\r\n      </LinkContainer>\r\n      <Nav className=\"mr-auto\">\r\n        <LinkContainer to=\"/login\">\r\n          <Nav.Link href=\"#features\">Log In</Nav.Link>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/signup\">\r\n          <Nav.Link href=\"#pricing\">Sign Up</Nav.Link>\r\n        </LinkContainer>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n\r\n  return <div>{isAuthenticated ? userNav : guestNav}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch(logout()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport dateFormat from \"dateformat\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Post.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <Card className=\"post-block\">\r\n      <Card.Body>\r\n        <Link to={`/post/${props.id}`}>\r\n          <Card.Title id=\"card-title\">{props.title}</Card.Title>\r\n        </Link>\r\n        <Card.Text className=\"text-secondary\">{props.description}</Card.Text>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <small className=\"text-muted\">\r\n            {dateFormat(props.created, \"mmmm dS, yyyy\")}\r\n          </small>\r\n          {props.postUser === props.user ? (\r\n            <Link to={`/edit/${props.id}`}>\r\n              <i className=\"fas fa-edit\" style={{ color: \"grey\" }}></i>\r\n            </Link>\r\n          ) : null}\r\n        </div>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  if (state.auth.isAuthenticated) {\r\n    return {\r\n      user: state.auth.user.username,\r\n    };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Post);\r\n","import axios from \"axios\";\r\nimport {\r\n  ADD_POST,\r\n  GET_ERRORS,\r\n  UPDATE_POST,\r\n  GET_POSTS,\r\n  DELETE_POST,\r\n  USER_POSTS,\r\n  GET_POST,\r\n} from \"./types\";\r\nimport { createMessage } from \"./messages\";\r\nimport { tokenConfig } from \"./auth\";\r\n\r\nexport const getPosts = () => (dispatch) => {\r\n  axios\r\n    .get(\"http://127.0.0.1:8000/posts/\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_POSTS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const errors = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: errors,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getPost = (id) => (dispatch) => {\r\n  axios\r\n    .get(`http://127.0.0.1:8000/posts/post-get/${id}/`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_POST,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const errors = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: errors,\r\n      });\r\n    });\r\n};\r\n\r\nexport const getUserPosts = () => (dispatch, getState) => {\r\n  axios\r\n    .get(\"http://127.0.0.1:8000/posts/post-user/\", tokenConfig(getState))\r\n    .then((res) => {\r\n      dispatch({\r\n        type: USER_POSTS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const errors = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: errors,\r\n      });\r\n    });\r\n};\r\n\r\nexport const addPost = (post) => (dispatch, getState) => {\r\n  axios\r\n    .post(\r\n      \"http://127.0.0.1:8000/posts/post-create/\",\r\n      post,\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch(createMessage({ postAdded: \"Post Added\" }));\r\n      dispatch({\r\n        type: ADD_POST,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const errors = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: errors,\r\n      });\r\n    });\r\n};\r\n\r\nexport const updatePost = (id, post) => (dispatch, getState) => {\r\n  axios\r\n    .post(\r\n      `http://127.0.0.1:8000/posts/post-update/${id}/`,\r\n      post,\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch(createMessage({ postUpdated: \"Post Updated\" }));\r\n      dispatch({\r\n        type: UPDATE_POST,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const errors = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: errors,\r\n      });\r\n    });\r\n};\r\n\r\nexport const deletePost = (id, user) => (dispatch, getState) => {\r\n  axios\r\n    .delete(\r\n      `http://127.0.0.1:8000/posts/post-delete/${id}/`,\r\n      tokenConfig(getState)\r\n    )\r\n    .then((res) => {\r\n      dispatch(createMessage({ postDeleted: \"Post Deleted\" }));\r\n      dispatch({\r\n        type: DELETE_POST,\r\n        payload: res.data,\r\n        user: user,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      const errors = {\r\n        msg: err.response.data,\r\n        status: err.response.status,\r\n      };\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: errors,\r\n      });\r\n    });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./PostList.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPosts } from \"../../actions/posts\";\r\n\r\nconst PostList = (props) => {\r\n  useEffect(() => {\r\n    props.getPosts();\r\n  }, []);\r\n\r\n  const postList = props.posts.map((post) => {\r\n    return (\r\n      <Post\r\n        title={post.title}\r\n        body={post.body}\r\n        created={post.created_at}\r\n        key={post.id}\r\n        postUser={post.user}\r\n        id={post.id}\r\n        description={post.description}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className=\"list-grid\">{postList}</div>;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPosts: () => dispatch(getPosts()),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.posts.posts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostList);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Alerts = (props) => {\r\n  const alert = useAlert();\r\n  const didMountRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (didMountRef.current) {\r\n      const error = props.error;\r\n      const message = props.message;\r\n      if (error) {\r\n        if (error.msg.user) alert.error(error.msg.user);\r\n        if (error.msg.username)\r\n          alert.error(`Username: ${error.msg.username.join()}`);\r\n        if (error.msg.password)\r\n          alert.error(`password: ${error.msg.password.join()}`);\r\n        if (error.msg.non_field_errors)\r\n          alert.error(error.msg.non_field_errors.join());\r\n      }\r\n      if (message) {\r\n        if (message.postAdded) alert.success(message.postAdded);\r\n        if (message.postUpdated) alert.success(message.postUpdated);\r\n        if (message.postDeleted) alert.success(message.postDeleted);\r\n      }\r\n    } else {\r\n      didMountRef.current = true;\r\n    }\r\n  });\r\n\r\n  return <div></div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.errors,\r\n  message: state.messages,\r\n});\r\n\r\nAlerts.propTypes = {\r\n  error: PropTypes.object.isRequired,\r\n  message: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Alerts);\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navigation from \"./Navbar/Navbar.js\";\r\n\r\nimport PostList from \"./PostList/PostList.js\";\r\nimport Alerts from \"./Alerts/Alerts\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <Container>\r\n        <Alerts />\r\n        <PostList />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport Navigation from \"../Navbar/Navbar.js\";\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../../actions/auth\";\r\nimport Alerts from \"../Alerts/Alerts\";\r\nimport \"./Signup.css\";\r\n\r\nconst Signup = (props) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n\r\n  const onUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const onEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onPasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const onPassword2Change = (e) => {\r\n    setPassword2(e.target.value);\r\n  };\r\n\r\n  const onSignupClick = () => {\r\n    props.register(username, email, password, password2);\r\n  };\r\n\r\n  if (props.isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"s-wrapper\">\r\n      <Navigation />\r\n      <div className=\"signup-block\">\r\n        <h1 style={{ textAlign: \"center\" }}>Sign up</h1>\r\n        <Alerts />\r\n        <Form>\r\n          <Form.Group controlId=\"usernameId\">\r\n            <Form.Label>User name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Enter user name\"\r\n              value={username}\r\n              onChange={onUsernameChange}\r\n            />\r\n            <FormControl.Feedback type=\"invalid\"></FormControl.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"emailId\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={onEmailChange}\r\n            />\r\n            <FormControl.Feedback type=\"invalid\"></FormControl.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"passwordId\">\r\n            <Form.Label>Your password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={onPasswordChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\"></Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"passwordId2\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password2\"\r\n              placeholder=\"Confirm password\"\r\n              value={password2}\r\n              onChange={onPassword2Change}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\"></Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form>\r\n        <Button color=\"primary\" onClick={onSignupClick}>\r\n          Sign up\r\n        </Button>\r\n        <p className=\"mt-2\">\r\n          Already have account? <Link to=\"/login\">Login</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    register: (username, email, password, password2) =>\r\n      dispatch(register(username, email, password, password2)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\nimport Navigation from \"../Navbar/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport Alerts from \"../Alerts/Alerts\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = (props) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const onPasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const onLoginClick = () => {\r\n    loginUser();\r\n  };\r\n\r\n  const loginUser = (e) => {\r\n    props.login(username, password);\r\n  };\r\n\r\n  if (props.isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Navigation />\r\n      <div className=\"login-block\">\r\n        <h1 style={{ textAlign: \"center\" }}>Login</h1>\r\n        <Alerts />\r\n        <Form>\r\n          <Form.Group controlId=\"usernameId\">\r\n            <Form.Label>User name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Enter user name\"\r\n              value={username}\r\n              onChange={onUsernameChange}\r\n            />\r\n            <FormControl.Feedback type=\"invalid\"></FormControl.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"passwordId\">\r\n            <Form.Label>Your password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={onPasswordChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\"></Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form>\r\n        <Button color=\"primary\" type=\"submit\" onClick={onLoginClick}>\r\n          Login\r\n        </Button>\r\n        <p className=\"mt-2\">\r\n          Don't have account? <Link to=\"/signup\">Signup</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (username, password) => dispatch(login(username, password)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../actions/posts\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\nconst AddPost = (props) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  const titleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const bodyChange = (e) => {\r\n    setBody(e.target.value);\r\n  };\r\n\r\n  const desChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const addClick = (e) => {\r\n    e.preventDefault();\r\n    const post = { title, body, description };\r\n    props.addPost(post);\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setBody(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <h1>Add Post</h1>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Label>Post Title</Form.Label>\r\n          <Form.Control onChange={titleChange} type=\"text\" value={title} />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Short Description</Form.Label>\r\n          <Form.Control onChange={desChange} type=\"text\" value={description} />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Body</Form.Label>\r\n          <CKEditor\r\n            data={body}\r\n            editor={ClassicEditor}\r\n            config={{\r\n              toolbar: [\r\n                \"heading\",\r\n                \"|\",\r\n                \"bold\",\r\n                \"italic\",\r\n                \"|\",\r\n                \"link\",\r\n                \"bulletedList\",\r\n                \"numberedList\",\r\n                \"|\",\r\n                \"undo\",\r\n                \"redo\",\r\n              ],\r\n            }}\r\n            onChange={(event, editor) => {\r\n              const data = editor.getData();\r\n              setBody(data);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Button onClick={addClick} variant=\"primary\" type=\"submit\">\r\n          Add\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (post) => dispatch(addPost(post)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddPost);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserPosts } from \"../../../actions/posts\";\r\nimport Post from \"../../PostList/Post/Post\";\r\n\r\nconst UserPosts = (props) => {\r\n  useEffect(() => {\r\n    props.getUserPosts();\r\n  }, []);\r\n\r\n  const postList = props.userPosts.map((post) => {\r\n    return (\r\n      <Post\r\n        title={post.title}\r\n        body={post.body}\r\n        created={post.created_at}\r\n        key={post.id}\r\n        id={post.id}\r\n        description={post.description}\r\n        postUser={post.user}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className=\"list-grid mb-4\">{postList}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userPosts: state.posts.userPosts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { getUserPosts: () => dispatch(getUserPosts()) };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPosts);\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Navigation from \"../Navbar/Navbar.js\";\r\nimport AddPost from \"../AddPost/AddPost\";\r\nimport Alerts from \"../Alerts/Alerts\";\r\nimport UserPosts from \"./UserPosts/UserPosts\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <Container>\r\n        <Alerts />\r\n        <div>\r\n          <AddPost />\r\n          <UserPosts />\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { Component, useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (auth.loading) {\r\n          return <h2>Loading...</h2>;\r\n        } else if (!auth.isAuthenticated) {\r\n          return <Redirect to=\"/login\" />;\r\n        } else {\r\n          return <Component {...props} />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  msg: {},\r\n  status: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        msg: action.payload.msg,\r\n        status: action.payload.status,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  ADD_POST,\r\n  UPDATE_POST,\r\n  GET_POSTS,\r\n  USER_POSTS,\r\n  GET_POST,\r\n  DELETE_POST,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  userPosts: [],\r\n  postDetail: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        postDetail: {},\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, action.payload],\r\n        userPosts: [...state.userPosts, action.payload],\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(\r\n          (post) => post.id !== parseInt(action.payload)\r\n        ),\r\n        userPosts: state.userPosts.filter(\r\n          (post) => post.id !== parseInt(action.payload)\r\n        ),\r\n      };\r\n    case UPDATE_POST:\r\n      const newPosts = state.posts.map((post) => {\r\n        if (post.id === parseInt(action.payload.id)) {\r\n          return { ...post, ...action.payload };\r\n        }\r\n        return post;\r\n      });\r\n      const newUserPosts = state.userPosts.map((post) => {\r\n        if (post.id === parseInt(action.payload.id)) {\r\n          return { ...post, ...action.payload };\r\n        }\r\n        return post;\r\n      });\r\n      return {\r\n        ...state,\r\n        posts: newPosts,\r\n        userPosts: newUserPosts,\r\n      };\r\n    case USER_POSTS:\r\n      return {\r\n        ...state,\r\n        userPosts: action.payload,\r\n        postDetail: {},\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        postDetail: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_MESSAGES, CREATE_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_MESSAGES:\r\n      return action.payload;\r\n    case CREATE_MESSAGE:\r\n      return (state = action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAILED,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n} from \"../actions/types\";\r\n\r\nconst intitalState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: false,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = intitalState, action) {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAILED:\r\n    case LOGOUT_SUCCESS:\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errors from \"./errors\";\r\nimport posts from \"./posts\";\r\nimport messages from \"./messages\";\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({\r\n  errors,\r\n  posts,\r\n  messages,\r\n  auth,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index.js\";\r\nimport { routerMiddleware, ConnectedRouter } from \"connected-react-router\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst Store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default Store;\r\n","import React from \"react\";\r\nimport \"./Comment.css\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nconst Comment = (props) => {\r\n  return (\r\n    <div className=\"comment\">\r\n      <div className=\"user-data\">\r\n        <i className=\"fas fa-user mr-2 mt-1\"></i>\r\n        <h5>{props.username}</h5>\r\n      </div>\r\n      <div className=\"date\">\r\n        <i className=\"fas fa-clock mr-2 mt-1\"></i>\r\n        <p className=\"text-secondary\">\r\n          {dateFormat(props.created_at, \"mmmm dS, yyyy\")}\r\n        </p>\r\n      </div>\r\n      <p>{props.text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Comment from \"./Comment/Comment\";\r\nimport \"./CommentList.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CommentList = (props) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [commentText, setCommentText] = useState(\"\");\r\n\r\n  const commentChange = (e) => {\r\n    setCommentText(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchComments = () => {\r\n      fetch(`http://127.0.0.1:8000/posts/post-comments/${props.id}/`)\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          setComments(data);\r\n        });\r\n    };\r\n    fetchComments();\r\n  }, []);\r\n\r\n  const addComment = () => {\r\n    const token = props.token;\r\n\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n\r\n    if (token) {\r\n      config[\"Authorization\"] = `Token ${token}`;\r\n    }\r\n\r\n    fetch(`http://127.0.0.1:8000/posts/comment-create/${props.id}/`, {\r\n      method: \"POST\",\r\n      headers: config,\r\n      body: JSON.stringify({ text: commentText }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n      });\r\n  };\r\n\r\n  const commentList = comments.map((comment) => {\r\n    return (\r\n      <Comment\r\n        username={comment.user}\r\n        text={comment.text}\r\n        created_at={comment.created_at}\r\n        key={comment.id}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"comment-list\">\r\n      <div>\r\n        <h3>Comments</h3>\r\n      </div>\r\n\r\n      {props.isAuthenticated ? (\r\n        <form className=\"mt-2\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            placeholder=\"Add comment...\"\r\n            value={commentText}\r\n            onChange={commentChange}\r\n          ></textarea>\r\n          <button\r\n            onClick={addComment}\r\n            type=\"submit\"\r\n            className=\"btn btn-primary mt-2\"\r\n          >\r\n            Add\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <p className=\"text-secondary\">Log in in order to add comments.</p>\r\n      )}\r\n      <hr></hr>\r\n      {commentList}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.auth.token,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CommentList);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Navigation from \"../Navbar/Navbar\";\r\nimport dateFormat from \"dateformat\";\r\nimport { getPost } from \"../../actions/posts\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport parse from \"html-react-parser\";\r\nimport CommentList from \"../CommentList/CommentList\";\r\nimport \"./PostPage.css\";\r\n\r\nconst PostPage = (props) => {\r\n  const { id } = useParams();\r\n  const [title, setTitle] = useState(undefined);\r\n  const [description, setDescription] = useState(undefined);\r\n  const [body, setBody] = useState(undefined);\r\n  const [createdAt, setCreatedAt] = useState(undefined);\r\n  const [user, setPostUser] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    props.getPost(id);\r\n    if (props.post.title !== title) {\r\n      setTitle(props.post.title);\r\n      setDescription(props.post.description);\r\n      setBody(props.post.body);\r\n      setCreatedAt(props.post.created_at);\r\n      setPostUser(props.post.user);\r\n    }\r\n  }, [props.post.title]);\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      {title === undefined ? (\r\n        <div className=\"centered\">\r\n          <Spinner animation=\"border\" variant=\"primary\" />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"post-container mt-4 mb-4\">\r\n            <h1>{title}</h1>\r\n            <h6 className=\"text-muted\">{description}</h6>\r\n            <p>\r\n              {user}{\" \"}\r\n              <span className=\"text-secondary ml-2\">\r\n                {dateFormat(createdAt, \"mmmm dS, yyyy\")}\r\n              </span>\r\n            </p>\r\n            <div style={{ textAlign: \"justify\" }}>{parse(body)}</div>\r\n          </div>\r\n          <CommentList id={id} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    post: state.posts.postDetail,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPost: (id) => dispatch(getPost(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostPage);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { updatePost, deletePost, getPost } from \"../../actions/posts\";\r\nimport Navigation from \"../Navbar/Navbar\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Alerts from \"../Alerts/Alerts\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\nconst EditPost = (props) => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const [title, setTitle] = useState(undefined);\r\n  const [description, setDescription] = useState(undefined);\r\n  const [body, setBody] = useState(undefined);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(1);\r\n    props.getPost(id);\r\n    if (props.post.title !== title) {\r\n      setTitle(props.post.title);\r\n      setDescription(props.post.description);\r\n      setBody(props.post.body);\r\n    }\r\n  }, [props.post.title]);\r\n\r\n  const titleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const bodyChange = (e) => {\r\n    setBody(e.target.value);\r\n  };\r\n\r\n  const desChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const updateClick = (e) => {\r\n    e.preventDefault();\r\n    const post = { title, body, description };\r\n    props.updatePost(id, post);\r\n    history.push(\"/dashboard\");\r\n  };\r\n\r\n  const deleteClick = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n  const deletePostConfirm = () => {\r\n    props.deletePost(id, props.user);\r\n    setShow(false);\r\n    history.push(\"/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      {title === undefined ? (\r\n        <div className=\"centered\">\r\n          <Spinner animation=\"border\" variant=\"primary\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"mt-4 container mb-4\">\r\n          <h1>Edit Post</h1>\r\n          <Alerts />\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Post Title</Form.Label>\r\n              <Form.Control onChange={titleChange} type=\"text\" value={title} />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Short Description</Form.Label>\r\n              <Form.Control\r\n                onChange={desChange}\r\n                type=\"text\"\r\n                value={description}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Body</Form.Label>\r\n              <CKEditor\r\n                data={body}\r\n                editor={ClassicEditor}\r\n                config={{\r\n                  toolbar: [\r\n                    \"heading\",\r\n                    \"|\",\r\n                    \"bold\",\r\n                    \"italic\",\r\n                    \"|\",\r\n                    \"link\",\r\n                    \"bulletedList\",\r\n                    \"numberedList\",\r\n                    \"|\",\r\n                    \"undo\",\r\n                    \"redo\",\r\n                  ],\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setBody(data);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n            <Button onClick={updateClick} variant=\"primary\" type=\"submit\">\r\n              Edit\r\n            </Button>\r\n            <Button className=\"ml-2\" variant=\"danger\" onClick={deleteClick}>\r\n              Delete\r\n            </Button>\r\n\r\n            <Modal animation={false} show={show} onHide={handleClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Delete Post</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Deleting a post will permanently remove it from the database.\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"success\" onClick={handleClose}>\r\n                  Keep Post\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={deletePostConfirm}>\r\n                  Delete Post\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </Form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    post: state.posts.postDetail,\r\n    user: state.auth.user.username,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updatePost: (id, post) => dispatch(updatePost(id, post)),\r\n    deletePost: (id, user) => dispatch(deletePost(id, user)),\r\n    getPost: (id) => dispatch(getPost(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home.js\";\nimport Signup from \"./components/signup/Signup\";\nimport Login from \"./components/Login/Login\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport PrivateRoute from \"./components/common/PrivateRoutes\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./Store\";\nimport { Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport { loadUser } from \"./actions/auth\";\nimport { useEffect } from \"react\";\nimport PostPage from \"./components/PostPage/PostPage\";\nimport EditPost from \"./components/EditPost/EditPost\";\n\n// Alert options\nconst alertOptions = {\n  timeout: 3000,\n};\n\nfunction App() {\n  useEffect(() => {\n    Store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Provider store={Store}>\n        <AlertProvider template={AlertTemplate} {...alertOptions}>\n          <Router>\n            <Switch>\n              <PrivateRoute exact path=\"/edit/:id\" component={EditPost} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/login\" component={Login} />\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/post/:id\" component={PostPage} />\n            </Switch>\n          </Router>\n        </AlertProvider>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}